security:
    # password hasher
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: 'argon2i'
            memory_cost: 8192
            cost: 12

    # user entity providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # app firewalls
    firewalls:
        login:
            pattern: ^/api/auth/login
            stateless: true
            provider: app_user_provider
            json_login:
                username_path: email
                check_path: /api/auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    # app access manager 
    access_control:
        # nelmio api doc (allow for public access)
        - { path: ^/api/doc,                    roles: PUBLIC_ACCESS }
        
        # auth system endpoints (allow for public access)
        - { path: ^/api/auth/register,          roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/login,             roles: PUBLIC_ACCESS }

        # product data get endpoints (allow for public access)
        - { path: ^/api/product/get,            roles: PUBLIC_ACCESS }
        - { path: ^/api/product/list,           roles: PUBLIC_ACCESS }
        - { path: ^/api/product/stats,          roles: PUBLIC_ACCESS }
        - { path: ^/api/product/categories,     roles: PUBLIC_ACCESS }
        - { path: ^/api/product/attributes,     roles: PUBLIC_ACCESS }
        - { path: ^/api/product/export/xls,     roles: PUBLIC_ACCESS }
        - { path: ^/api/product/asset/icon,     roles: PUBLIC_ACCESS }
        - { path: ^/api/product/asset/image,    roles: PUBLIC_ACCESS }
        
        # admin access routes
        - { path: ^/api/admin,                  roles: ROLE_ADMIN }

        # define required role for api routes access
        - { path: ^/api,                        roles: ROLE_USER }
